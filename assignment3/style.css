/* Reset */
html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
}

/* Header */
.header {
  display: flex;
  justify-content: end;
  padding: 20px;
}

#infoBtn {
  width: 50px;
  height: auto;
}

/* Machine container and wrapper */
.machine-container {
  display: flex;
  justify-content: center;
  align-items: flex-end;
  padding: 20px;
  gap: 40px; /* space between sign and machine */
}

.machine-wrapper {
  position: relative;
  display: inline-block;
}

/* Machine buttons */
.machine-button {
  position: absolute;
  width: 30px;
  height: 30px;
  background-color: red; /* testing */
  border: none;
  border-radius: 50%;
  cursor: pointer;
}

#button1 {
  top: 150px;
  left: 75px;
}
#button2 {
  top: 150px;
  left: 153px;
}
#button3 {
  top: 150px;
  left: 232px;
}
#button4 {
  top: 150px;
  left: 316px;
}
#button5 {
  top: 255px;
  left: 75px;
}
#button6 {
  top: 255px;
  left: 153px;
}
#button7 {
  top: 255px;
  left: 233px;
}
#button8 {
  top: 362px;
  left: 75px;
}
#button9 {
  top: 362px;
  left: 153px;
}
#button10 {
  top: 362px;
  left: 233px;
}

/* Can styles */
#can {
  position: absolute;
  top: 450px; /* initial position */
  left: 200px; /* initial position */
  width: 50px;
  opacity: 0;
  transform: translateY(0);
  transform-origin: center center;
  transform-style: preserve-3d;
  cursor: pointer;
  transition: opacity 0.4s ease, transform 0.6s ease;
  z-index: 10;
  pointer-events: auto;
}

/* Can animation: drop */
#can.animate {
  animation: dropCan 0.5s ease-out forwards;
  opacity: 1;
}

@keyframes dropCan {
  0% {
    transform: translateY(0) rotate(0);
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  100% {
    transform: translateY(60px) rotate(90deg);
    opacity: 1;
  }
}

/* Can centered state */
#can.centered {
  top: 50%;
  left: 20%;
  transform: translate(-50%, -50%) rotate(0deg);
  width: 200px;
  opacity: 1;
  z-index: 9999; /* ensure it's on top */
  transition: all 0.5s ease;
  pointer-events: auto; /* clickable */
}

/* Optional clickable cursor */
#can.clickable {
  cursor: pointer;
}

/* Overlay styles */
#overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.6);
  z-index: 1;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
}

#overlay.active {
  opacity: 1;
  pointer-events: auto;
}

/* Utility classes */
.hidden {
  display: none;
}

/* Shake animations */
@keyframes shake {
  0%,
  100% {
    transform: translate(-50%, -50%) rotate(0);
  }
  20%,
  60% {
    transform: translate(-50%, -50%) rotate(-5deg);
  }
  40%,
  80% {
    transform: translate(-50%, -50%) rotate(5deg);
  }
}

.shake {
  animation: shake 0.5s ease-in-out;
}

@keyframes machineShake {
  0%,
  100% {
    transform: translateX(0);
  }
  20%,
  60% {
    transform: translateX(-5px);
  }
  40%,
  80% {
    transform: translateX(5px);
  }
}

.machineShake {
  animation: machineShake 0.4s ease-in-out;
}

/* Card Flip */

.card-container {
  perspective: 1000px;
  position: fixed;
  top: 50%;
  left: 50%;
  width: 300px;
  height: 400px;
  transform-style: preserve-3d;
  transform-origin: center center;
  transform: translate(-50%, -50%);
  cursor: pointer;
  z-index: 9999;
}

.card {
  width: 100%;
  height: 100%;
  transition: transform 0.6s ease;
  transform-style: preserve-3d;
  position: relative;
}

.flipped {
  transform: rotateY(180deg);
}

/* Faces unchanged */
.card-face {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  border-radius: 12px;
  overflow: hidden;
  top: 0;
  left: 0;
}

.card-face.back {
  transform: rotateY(180deg);
}

.card:hover {
  scale: 0.98;
}

.card-face {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  border-radius: 12px;
  overflow: hidden;
}

.card-face img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

.flipped {
  transform: rotateY(180deg);
}
