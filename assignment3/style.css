/*
  For this project, I wanted to create a playful and lighthearted experience, especially since we were given a lot of creative freedom with the concept. 
  I was inspired by things like blind boxes and fortune cookies. Instead of figurines or fortunes, I thought it’d be fun to hand out random (and mostly useless)
  pieces of advice. That’s when I hit a design block: how do I actually present and 'store' these advice boxes?

  That’s when the idea of a vending machine came to mind. There’s basically a vending machine for anything nowadays, so it felt like the perfect interactive format for 
  users to 'choose' their mystery box of advice. Plus, it naturally worked with the assignment’s requirement for a click interaction.

  As for the overall style, I tried to reflect that chaotic-fun energy through a bold and playful visual direction. 
  I used a bright colour palette, soft shadows, rounded corners, and oversized elements to make the interface feel friendly and approachable. 
  As for the font choice, I went with something scribbly and handwritten, kind of like it was written with a permanent marker. 
  Altogether, the design is meant to feel informal, fun, and not to be taken too seriously, just like the advice itself.
*/

/* 
Font Family
font-family: "Caveat Brush", cursive; 
font-family: "chantal", sans-serif;

Colour:
Dull Purple: #514f65
Light Blue: #79e6f2
Yellow: #D5C56B
Dark Blue: #13121f
Light Pink: #F29188
Dark Pink: #D96A88

*/

/* 
  Reset default margin and padding on html and body so the layout fills the entire viewport 
  and no unexpected spacing around edges.
*/
html,
body {
  margin: 0;
  padding: 0;
  /* Make sure body takes full height for the background to cover */
  height: 100%;
}

/* 
  Set a background image that covers the whole page without repeating, 
  and keep it centered so it looks good on any screen size.
*/
body {
  background-image: url("img/background.png");
  /* Makes sure the image fills the entire screen */
  background-size: cover;
  /* Keeps the image centered on the screen */
  background-position: center;
  /* Prevents the image from tiling */
  background-repeat: no-repeat;
}

/*--------------------------------*/
/* Header buttons                 */
/*--------------------------------*/

/* 
  Using flexbox to push the images to the right side. 
  Added padding and a gap to improve the layout.
*/

.header {
  display: flex;
  /* Align items to the right */
  justify-content: end;
  padding: 20px;
  gap: 20px;
}

/* Set fixed size for info button to keep layout consistent */
#info-btn {
  width: 50px;
  height: 50px;
}

/* Slight shrink effect on hover for a subtle interactive feel */
#info-btn:hover {
  transform: scale(0.9);
}

/* Set fixed size for sound button to match info button */
#sound-on {
  width: 50px;
  height: 50px;
}

/* Same hover effect for consistency */
#sound-on:hover {
  transform: scale(0.9);
}

/*--------------------------------*/
/* Machine                        */
/*--------------------------------*/

/* Container holding the vending machine and the sign.
  Uses flexbox to space out the sign and machine evenly,
  aligns them at the bottom to keep everything lined up nicely,
  and adds top margin and padding for overall spacing.v*/
.machine-container {
  display: flex;
  justify-content: space-evenly;
  align-items: flex-end;
  margin-top: 120px;
  padding: 20px;
  /* space between sign and machine */
  gap: 50px;
}

/* Wrapper around the vending machine image, positioned relative
  to allow positioning of buttons inside it. This was done as there 
  was elements that needed to be animated inside of the vending machine*/
.machine-wrapper {
  position: relative;
  display: inline-block;
}

/* Invisible clickable buttons placed over the machine image. For users to click for the interaction to take place.
  They’re absolutely positioned to align with button spots on the machine. */
.machine-button {
  position: absolute;
  width: 30px;
  height: 30px;
  opacity: 0%;
  border: none;
  border-radius: 50%;
  cursor: pointer;
  /*used for testing when i needed to place the buttons, 
  I change the colour to be able to see them. However since 
  I wanted to create some sort of state change to allow users 
  to know where they can press, I had to use transparent so that 
  the image replaced could be seen without any boarder */
  background-color: transparent;
}

/* On hover, button changes to give visual feedback, helping users 
know where they can click.*/
.machine-button:hover {
  opacity: 100%;
  transform: scale(1.2);
  background-color: none;
}

/* 
  The hover button. Since it was an image I have to adjust the opactity this way, having it be
  fully visible by default and smoothly fade out when hidden.
  Pointer events disabled so they don't block button clicks.
*/
.hover-btn {
  opacity: 1;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

/* Hide the hover button image by fading out */
.hover-btn.hidden {
  opacity: 0;
}

/* Positioning of each button to align exactly on the vending machine image */
#button1 {
  top: 153px;
  left: 128px;
}
#button2 {
  top: 153px;
  left: 209px;
}
#button3 {
  top: 153px;
  left: 290px;
}
#button4 {
  top: 153px;
  left: 376px;
}
#button5 {
  top: 262px;
  left: 128px;
}
#button6 {
  top: 262px;
  left: 209px;
}
#button7 {
  top: 262px;
  left: 290px;
}
#button8 {
  top: 371px;
  left: 128px;
}
#button9 {
  top: 371px;
  left: 209px;
}
#button10 {
  top: 371px;
  left: 290px;
}

/*--------------------------------*/
/* Can Animation                  */
/*--------------------------------*/

/* This is animation for the can. Since it is a vending machine, 
I needed to create the can dropping animation for when the can is dispensed. 
For this I used keyframes to animate it, adjusting the position and rotate to 
achieve the motion of the can dropping. Adding transition to ensure a smoother animation*/

#can {
  position: absolute;
  /* initial position */
  top: 450px;
  /* initial position */
  left: 250px;
  width: 50px;

  /* Having to start it as transparent as it needed to be hidden */
  opacity: 0;
  transform: translateY(0);
  /* Ensures any rotation happens from the can's center, making motion feel more natural */
  transform-origin: center center;
  transform-style: preserve-3d;
  cursor: pointer;
  transition: opacity 0.4s ease, transform 0.6s ease;
  z-index: 10;
  pointer-events: auto;
}

/* Using fowards to keep the object at the same spot as when it ends. 
Otherwise it will go back to the initial position */
#can.animate {
  animation: dropCan 0.5s ease-out forwards;
  opacity: 1;
}

@keyframes dropCan {
  0% {
    transform: translateY(0) rotate(0);
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  100% {
    transform: translateY(72px) rotate(90deg);
    opacity: 1;
  }
}

/* this was to move the can to the center of the screen for the reveal. Created this animation 
as I needed a way to reveal the cards. Hence thinking of creating a 'move to center' animation 
before having the cards be revealed. Again using the transition to make this animation */

#can.centered {
  top: 36%;
  left: 46%;
  transform: translate(-50%, -50%) rotate(0deg);
  /* Scale the can up to make it a focus element (like opening a blind box) */
  width: 250px;
  opacity: 1;
  z-index: 10;
  transition: all 0.5s ease;
  pointer-events: auto;
}

/*--------------------------------*/
/* Overlay                        */
/*--------------------------------*/

/* to create the overlay for when the  */
#overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.75);
  z-index: 1;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
}

#overlay.active {
  opacity: 1;
  pointer-events: auto;
}

/*--------------------------------*/
/* Shake Animtion                 */
/*--------------------------------*/

@keyframes shake {
  0%,
  100% {
    transform: translate(-50%, -50%) rotate(0);
  }
  20%,
  60% {
    transform: translate(-50%, -50%) rotate(-5deg);
  }
  40%,
  80% {
    transform: translate(-50%, -50%) rotate(5deg);
  }
}

.shake {
  animation: shake 0.5s ease-in-out;
}

@keyframes machineShake {
  0%,
  100% {
    transform: translateX(0);
  }
  20%,
  60% {
    transform: translateX(-5px);
  }
  40%,
  80% {
    transform: translateX(5px);
  }
}

.machineShake {
  animation: machineShake 0.4s ease-in-out;
}

/*--------------------------------*/
/* Steps Text                */
/*--------------------------------*/

.step-text {
  position: fixed;
  top: 73%; /* Adjust to place nicely near the can */
  left: 83.5%;
  max-width: 200px;
  transform: translateX(-50%);
  font-family: "chantal", sans-serif;
  font-size: 2.3rem;
  color: white;
  opacity: 1;
  transition: opacity 1.5s ease;
  z-index: 1;
  text-align: center;
}

.step-text p {
  font-weight: bolder;
}

.step-text h1 {
  font-weight: lighter;
  font-size: 1.2rem;
}

/*--------------------------------*/
/* Text "Click Me"                */
/*--------------------------------*/

.click-can-text {
  position: absolute;
  top: 47%; /* Adjust to place nicely near the can */
  left: 50%;
  transform: translateX(-50%);
  font-family: "chantal", sans-serif;
  font-size: 1.7rem;
  font-weight: bolder;
  color: white;
  opacity: 1;
  transition: opacity 1.5s ease;
  pointer-events: none; /* so it doesn’t block clicks */
  z-index: 20;
  text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
}

.click-can-text.hidden {
  opacity: 0;
  pointer-events: auto;
}

/*--------------------------------*/
/* Card                           */
/*--------------------------------*/
.card-container {
  perspective: 1000px;
  position: fixed;
  top: 50%;
  left: 50%;
  width: 300px;
  height: 405px;
  transform-style: preserve-3d;
  transform-origin: center center;
  transform: translate(-50%, -50%);
  cursor: pointer;
  z-index: 20;
  opacity: 0;
  transition: opacity 0.6s ease;
  /* Ensure it's ready for fade in */
}

.card {
  width: 100%;
  height: 100%;
  transition: transform 0.6s ease;
  transform-style: preserve-3d;
  position: relative;
}

/*--------------------------------*/
/* Card Animation                 */
/*--------------------------------*/
.card-face {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  border-radius: 12px;
  top: 0;
  left: 0;
}

.card-face.back {
  transform: rotateY(180deg);
}

.card:hover {
  scale: 0.98;
}

.card-face {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  border-radius: 12px;
  overflow: hidden;
}

.card-face img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

.flipped {
  transform: rotateY(180deg);
}

/*--------------------------------*/
/* Retry Button                   */
/*--------------------------------*/

#close-btn {
  font-family: "chantal", sans-serif;
  margin-top: 10px;
  margin-left: 80px;
  padding: 15px 40px;
  font-size: 1.2rem;
  background-color: #13121f;
  color: white;
  border: 2px solid white;
  border-radius: 10px;
  cursor: pointer;
  transition: opacity 0.4s ease, background-color 0.3s ease;
}

.close-btn {
  opacity: 1;
  pointer-events: auto;
}

.close-btn.hidden {
  opacity: 0;
  pointer-events: none;
}

#close-btn:hover {
  background-color: #514f65;
  cursor: pointer;
}

/*--------------------------------*/
/* Screen Warning                 */
/*--------------------------------*/
#screen-warning {
  font-family: "chantal", sans-serif;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: #13121f;
  color: white;
  font-size: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 50;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.3s ease;
}

#screen-warning.visible {
  opacity: 1;
  pointer-events: auto;
}

#screen-warning p {
  text-align: center;
  max-width: 600px;
  padding: 0 20px;
}
/*--------------------------------*/
/* Information PopUp              */
/*--------------------------------*/

.information-popup {
  font-family: "chantal", sans-serif;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

/*this content creates the box around the text*/
.information-popup-content {
  position: relative;
  background-color: #f29188;
  padding: 60px;
  border-radius: 12px;
  text-align: center;
  max-width: 700px;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
  color: bacl;
}

.information-popup h1 {
  margin-bottom: 5px;
  font-size: 1.5rem;
  font-weight: bold;
}

#logo-name {
  font-family: "chantal", sans-serif;
  font-size: 2.5rem;
}

#name {
  font-size: small;
}

#close-info-btn {
  position: absolute;
  top: 20px;
  right: 30px;
  justify-content: right;
  background-color: #26233e;
  color: white;
  border-radius: 50%;
  height: 30px;
  width: 30px;
  text-align: center;
  font-size: 1rem;
  padding: 0;
  box-shadow: none;
  cursor: pointer;
  border: 1px solid #514f65;
}

#close-info-btn:hover {
  color: white;
  transform: scale(1.2);
  transition: transform 0.2s ease; /* Optional for smooth animation */
  background-color: #514f65;
  border: none;
}

.attribution-btn {
  padding: 10px 20px;
  border-radius: 10px;
  background-color: #514f65;
  color: white;
  border: none;
  font-size: 1rem;
  cursor: pointer;
  margin-bottom: -100px;
}

.attribution-btn:hover {
  background-color: #13121f;
  color: white;
  transform: scale(1.1);
  transition: transform 0.2s ease;
}
/*--------------------------------*/
/* Attribution PopUp              */
/*--------------------------------*/
.attribution-popup {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

/*this content creates the box around the text*/
#attribution-popup-content {
  font-family: "chantal", sans-serif;
  position: relative;
  background-color: white;
  padding: 60px;
  border-radius: 12px;
  max-width: 500px;
  height: 320px;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
  color: black;
  font-weight: lighter;
  font-size: 0.8rem;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

#attribution-header {
  justify-content: center;
  font-weight: bold;
  font-size: 1.3rem;
  margin-bottom: 40px;
}

#close-attribution-btn {
  position: absolute;
  top: 20px;
  right: 30px;
  justify-content: right;
  background-color: #26233e;
  color: white;
  border-radius: 50%;
  height: 30px;
  width: 30px;
  text-align: center;
  font-size: 1rem;
  padding: 0;
  box-shadow: none;
  cursor: pointer;
  border: 1px solid #514f65;
}

#close-attribution-btn:hover {
  color: white;
  transform: scale(1.2);
  transition: transform 0.2s ease; /* Optional for smooth animation */
  background-color: #514f65;
}

/*--------------------------------*/
/* Other                          */
/*--------------------------------*/
.hidden {
  opacity: 0;
  pointer-events: none;
  pointer-events: none; /* prevents clicks */
  visibility: hidden;
  position: fixed; /* or whatever positioning */
}
